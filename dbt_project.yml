
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_sf_project'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In dbt, the default materialization for a model is a view. This means, when you run 
# dbt run or dbt build, all of your models will be built as a view in your data platform. 
# The configuration below will override this setting for models in the example folder to 
# instead be materialized as tables. Any models you add to the root of the models folder will 
# continue to be built as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
  sample_project:
    staging:
      materialized: view
    marts:
      order_analysis:
        materialized: table
      customer_analysis:
        materialized: table

seeds:
  sample_project:
    enabled: true
    materialized: table

snapshots:
  sample_project:
    enabled: true

metrics:
  - name: total_revenue
    model: ref('orders_summary')
    description: "Sum of total revenue from all orders"
    calculation_method: sum
    expression: total_revenue
    timestamp: order_date
    time_grains: [day, week, month, quarter, year]

  - name: customer_lifetime_value
    model: ref('customer_lifetime_value')
    description: "Sum of the lifetime value of each customer"
    calculation_method: sum
    expression: lifetime_value
    timestamp: order_date
    time_grains: [day, week, month, quarter, year]

exposures:
  - name: bi_dashboard
    type: dashboard
    owner:
      name: "Data Team"
      email: "data-team@example.com"
    depends_on:
      - ref('orders_summary')
      - ref('customer_lifetime_value')
    url: "https://bi.example.com/dashboards/order_analysis"
    description: "Dashboard for analyzing orders and customer lifetime value"

  - name: marketing_report
    type: report
    owner:
      name: "Marketing Team"
      email: "marketing-team@example.com"
    depends_on:
      - ref('customer_retention')
    url: "https://reports.example.com/marketing/customer_retention"
    description: "Report for analyzing customer retention metrics"